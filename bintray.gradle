apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

ext {
	bintrayRepo 		= 'maven'
	bintrayName 		= getProperty("bintray.name")					// Project name in jcenter

	publishedGroupId 	= getProperty("bintray.groupid") 				// Maven Group ID for the artifact
	artifact 		= getProperty("bintray.artifact")				// Maven

	siteUrl 		= getProperty("bintray.site.url")
	gitUrl 			= getProperty("bintray.git.url")

	libraryDescription 	= getProperty("bintray.library.description")			// Project description
	libraryName 		= getProperty("bintray.library.name")				// Project name
	libraryVersion 		= getProperty('bintray.version');				// Project version

	developerId 		= getProperty("bintray.developer.id")				// Developer ID
	developerName 		= getProperty("bintray.developer.name")				// Developer Name
	developerEmail 		= getProperty("bintray.developer.email")			// Developer Email

	licenseName 		= getProperty("bintray.license.name")				// License name
	licenseUrl 		= getProperty("bintray.license.url")				// License url
	allLicenses 		= [getProperty("bintray.alllicenses")]				//
}

group				= publishedGroupId						// Maven Group ID for the artifact
version				= libraryVersion

task sourcesJar(type: Jar) {
	from android.sourceSets.main.java.srcDirs
	classifier = 'sources'
}

task javadoc(type: Javadoc) {
	source = android.sourceSets.main.java.srcDirs
	classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	//noinspection GroovyAccessibility
	from javadoc.destinationDir
}

javadoc {
	options {
		encoding "UTF-8"
		charSet 'UTF-8'
		author true
		version true
		links "http://docs.oracle.com/javase/7/docs/api"
		title libraryName
	}
}
artifacts {
	archives javadocJar
	archives sourcesJar
}

install {
	repositories.mavenInstaller {
		// This generates POM.xml with proper parameters
		pom {
			project {
				packaging 'aar'
				groupId publishedGroupId
				artifactId artifact

				// Add your description here
				name libraryName
				description libraryDescription
				url siteUrl

				// Set your license
				licenses {
					license {
						name licenseName
						url licenseUrl
					}
				}
				developers {
					developer {
						id developerId
						name developerName
						email developerEmail
					}
				}
				scm {
					connection gitUrl
					developerConnection gitUrl
					url siteUrl

				}
			}
		}
	}
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
	user = properties.getProperty("bintray.user")
	key = properties.getProperty("bintray.apikey")

	configurations = ['archives']
	pkg {
		repo = bintrayRepo
		name = bintrayName
		desc = libraryDescription
		websiteUrl = siteUrl
		vcsUrl = gitUrl
		licenses = allLicenses
		publish = true
		publicDownloadNumbers = true
		version {
			desc = libraryDescription
			gpg {
				sign = true //Determines whether to GPG sign the files. The default is false
				passphrase = properties.getProperty("bintray.gpg.password")
				//Optional. The passphrase for GPG signing'
			}
		}
	}
}
